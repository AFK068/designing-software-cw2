version: '3.8'

services:
  postgresql-analyzer:
    container_name: postgresql-analyzer
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: postgresql-analyzer
    ports:
      - "5432:5432"
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 1s
      retries: 30

  postgresql-keeper:
    container_name: postgresql-keeper
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: postgresql-keeper
    ports:
      - "5433:5432"
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 1s
      retries: 30

  analyzer-service:
    build:
      context: ./analyzer-service
    container_name: analyzer-service
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "8082:8082"
    depends_on:
      postgresql-analyzer:
        condition: service_healthy

  keeper-service:
    build:
      context: ./keeper-service
    container_name: keeper-service
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "8081:8081"
    depends_on:
      postgresql-keeper:
        condition: service_healthy

  kong:
    image: kong:latest
    container_name: kong
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: "/kong/kong.yml"
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    ports:
      - "8000:8000" # PROXY
      - "8001:8001"
    volumes:
      - ./kong/kong.yml:/kong/kong.yml
    depends_on:
      - analyzer-service
      - keeper-service
